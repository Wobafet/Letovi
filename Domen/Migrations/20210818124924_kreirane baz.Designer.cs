// <auto-generated />
using System;
using Domen;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domen.Migrations
{
    [DbContext(typeof(LetContext))]
    [Migration("20210818124924_kreirane baz")]
    partial class kreiranebaz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domen.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipKorisnika")
                        .HasColumnType("int");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Domen.Let", b =>
                {
                    b.Property<int>("LetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMesta")
                        .HasColumnType("int");

                    b.Property<int>("BrojPresedanja")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("MestoDolaska")
                        .HasColumnType("int");

                    b.Property<int>("MestoPolaska")
                        .HasColumnType("int");

                    b.HasKey("LetId");

                    b.ToTable("Let");
                });

            modelBuilder.Entity("Domen.Rezervacija", b =>
                {
                    b.Property<int>("LetId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("StatusLeta")
                        .HasColumnType("int");

                    b.HasKey("LetId", "KorisnikId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("Domen.Rezervacija", b =>
                {
                    b.HasOne("Domen.Korisnik", "Korisnik")
                        .WithMany("Rezervacija")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.Let", "Let")
                        .WithMany("Rezervacija")
                        .HasForeignKey("LetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Let");
                });

            modelBuilder.Entity("Domen.Korisnik", b =>
                {
                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("Domen.Let", b =>
                {
                    b.Navigation("Rezervacija");
                });
#pragma warning restore 612, 618
        }
    }
}
